{
	"info": {
		"_postman_id": "18e82789-a3b8-4eb9-8c14-63078cb1bbe9",
		"name": "BookStoreAPIExercise",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34623648"
	},
	"item": [
		{
			"name": "GetBooksFromBookStore",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response contains 'O'Reilly Media'\", function () {",
							"    var jsonData = pm.response.json();",
							"    var books = jsonData.books;",
							"    var containsOReilly = books.some(book => book.publisher === \"O'Reilly Media\");",
							"    pm.expect(containsOReilly).to.be.true;",
							"});",
							"",
							"pm.test(\"First book's publish date is valid\", function () {",
							"    var jsonData = pm.response.json();",
							"    var firstBookPublishDate = jsonData.books[0].publish_date;",
							"    // Regex to validate ISO 8601 date format",
							"    var iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;",
							"    pm.expect(firstBookPublishDate).to.match(iso8601Regex);",
							"});",
							"",
							"pm.test(\"All book titles are unique\", function () {",
							"    var jsonData = pm.response.json();",
							"    var titles = jsonData.books.map(book => book.title);",
							"    var uniqueTitles = new Set(titles);",
							"    pm.expect(uniqueTitles.size).to.eql(titles.length);",
							"});",
							"",
							"pm.test(\"Content-Type header contains utf-8\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"utf-8\");",
							"});",
							"",
							"pm.test(\"Server is nginx/1.17.10 (Ubuntu)\", function () {",
							"    pm.expect(pm.response.headers.get(\"Server\")).to.eql(\"nginx/1.17.10 (Ubuntu)\");",
							"});",
							"",
							"pm.test(\"X-Powered-By is Express\", function () {",
							"    pm.expect(pm.response.headers.get(\"X-Powered-By\")).to.eql(\"Express\");",
							"});",
							"",
							"pm.test(\"Response has Date header\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"Total number of pages is greater than 1000\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.books.length).to.be.above(1000);",
							"});",
							"",
							"pm.test(\"All authors are valid\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.books.forEach(book => {",
							"        pm.expect(book.author).to.match(/^[a-zA-Z]+(?:\\s[a-zA-Z.]+)*$/);",
							"    });",
							"});",
							"",
							"pm.test(\"All website URLs are valid\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.books.forEach(book => {",
							"        pm.expect(book.website).to.match(/^(https?:\\/\\/)?([\\w\\d-]+\\.)*[\\w\\d-]+(\\.[\\w\\d-]+)+([/?].*)?$/);",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://demoqa.com/BookStore/v1/Books",
					"protocol": "https",
					"host": [
						"demoqa",
						"com"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		}
	]
}